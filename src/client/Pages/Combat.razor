@using c5m._2d6Dungeon;
<h3>Combat Screen</h3>

@if(creature == null)
{
    <CreaturePicker @bind-ParentCreature="creature"></CreaturePicker>
}
else{
    <FluentStack Orientation="Orientation.Vertical" >
        <FluentStack Orientation="Orientation.Horizontal" Width="100%">
            <FluentCard Width="600px"> 
                <AdventurerCard @bind-Player="player" Extented=true></AdventurerCard>
            </FluentCard>
            <FluentCard Width="400px">
                <QuickReferenceCombatCard></QuickReferenceCombatCard>
            </FluentCard>
            <FluentCard Width="400px">
                <CreatureCard @bind-creature="creature"></CreatureCard> 
            </FluentCard>
            
        </FluentStack>
        <div style="padding:20px;">
            <DiceSet color="DiceSet.DiceColor.red" size="DiceSet.DiceSize.regular" face="@primaryDice" />
            <DiceSet color="DiceSet.DiceColor.purple" size="DiceSet.DiceSize.regular" face="@secondaryDice" />
        </div>
        <FluentButton Appearance="Appearance.Accent" @onclick=Roll2Dices IconStart="@(new Icons.Regular.Size16.Cube())">Roll</FluentButton>
    </FluentStack>
}


@code {
    [Parameter]
    public Game.Adventurer player { get; set; }

    [Parameter] 
    public EventCallback<Game.Adventurer> PlayerChanged { get; set; }

    public IEnumerable<Creature>? creatures { get; set; }
    public Creature? creature { get; set; }

    private int primaryDice = 0;
    private int secondaryDice = 0;
   
    private void Roll2Dices()
    {
        var dices = DiceResult.Roll2Dices();
        primaryDice = dices.PrimaryDice;
        secondaryDice = dices.SecondaryDice;

        StateHasChanged();
    }

}
