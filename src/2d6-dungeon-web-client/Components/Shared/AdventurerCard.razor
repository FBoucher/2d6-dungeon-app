@using c5m._2d6Dungeon;
@inject D6Service D6Service;

@rendermode InteractiveServer


<FluentPersona  Name="@(Player.Name)"
                ImageSize="50px"
                Status="PresenceStatus.Available"
                StatusSize="PresenceBadgeSize.Small"
                OnClick="@(() => ToggleExtended())">
        <FluentStack Orientation="Orientation.Vertical" VerticalGap="0">
            <FluentLabel Typo="Typography.H3">@Player.Name</FluentLabel>
            <FluentLabel Typo="Typography.Body"><b>XP:</b><FluentNumberField @bind-Value="@Player.XP" style="width: 80px;" /></FluentLabel>
            <FluentLabel Typo="Typography.Body"><b>Level:</b> <FluentNumberField @bind-Value="@Player.Level" style="width: 80px;" /></FluentLabel>
        </FluentStack>
</FluentPersona>
@if(Extented)
{
    <FluentStack Orientation="Orientation.Vertical" VerticalGap="5" Width="100%">
        <div>
            <FluentStack Orientation="Orientation.Horizontal" VerticalAlignment="VerticalAlignment.Bottom" HorizontalGap="5" Width="100%">
                @if(Editable)
                {
                    <span class="sheetTitle">HP</span> <FluentNumberField @bind-Value="@Player.HealthPoints" style="width: 80px;" />
                }
                else 
                {
                    <span class="sheetTitle">HP</span> @Player.HealthPoints.ToString()
                }
                    
                <span class="sheetTitle">SH </span> @Player.Shift.ToString()
                <span><span class="sheetTitle">Precision</span> @Player.Precision.ToString()</span>
            </FluentStack>
        </div>
        @* <div class="sheetTitle"><b>WEAPON</b> @Player.Weapon?.Name ?? ""</div>*@
        <div class="sheetTitle"><b>APPLIED RUNES</b> @Player.AppliedRunes.ToString()</div> 
        <div class="sheetTitle">Manoeuvre</div>
        @foreach(var weaponManoeuvre in Player.WeaponManoeuvres!)
        {
            <div><Manoeuvre manoeuvre="@weaponManoeuvre" /></div>
        }
        <ArmourPieces armourPiece="@Player.ArmourPieces" />
        <MagicScrolls magicScrolls="@Player.MagicScrolls" />
        <MagicPotions magicPotions="@Player.MagicPotions" />
    </FluentStack>
}

@code {
    [Parameter]
    public required Game.Adventurer Player { get; set; }

    [Parameter] 
    public EventCallback<Game.Adventurer> PlayerChanged { get; set; }

    [Parameter]
    public bool Extented { get; set; } = false;

    [Parameter]
    public bool Editable { get; set; } = false;

    private void ToggleExtended()
    {
        Extented = !Extented;
    }
}
