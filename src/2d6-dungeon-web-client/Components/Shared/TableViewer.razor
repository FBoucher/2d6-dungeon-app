@using c5m._2d6Dungeon;
@using c5m._2d6Dungeon.domain
@inject D6Service D6Service;

@rendermode InteractiveServer

<h3>Table Viewer</h3>

<FluentStack Orientation="Orientation.Vertical" VerticalGap="5">
    <FluentStack Orientation="Orientation.Horizontal" HorizontalGap=10" VerticalAlignment="VerticalAlignment.Bottom" >
        <div>
                <FluentSelect   Items=@metatablesQueryable 
                    Label="Select Table"
                    OptionText="@(t => t.Name)"
                    OptionValue="@(t => t.Id.ToString())"
                    SelectedOptionChanged = "@( (MetaTables t) => TableSelected(t.Id))"
                    Placeholder="Select a Table"
                    /> 
        </div>

        <div>
            <FluentButton OnClick="@( () => RollDices(1) )" Appearance="Appearance.Accent">Roll 1D6</FluentButton>
            <FluentButton OnClick="@( () => RollDices(2) )" Appearance="Appearance.Accent">Roll 2D6</FluentButton>
        </div>
        
        <div style="padding:20px;">
            @if(dicesResult != null)
            {
                <Dices face="@dicesResult.PrimaryDice" size="Dices.DiceSize.regular" color="Dices.DiceColor.red"></Dices>
                <Dices face="@dicesResult.SecondaryDice" size="Dices.DiceSize.regular" color="Dices.DiceColor.purple"></Dices>
            }
        </div>
    </FluentStack>



</FluentStack>

@code {
    private MetaTables? selectedTable;
    IQueryable<MetaTables>? metatablesQueryable;
    private DiceResult dicesResult = new DiceResult();

    protected override async Task OnInitializedAsync()
    {
        await LoadTableData();
    }

    private async Task LoadTableData()
    {
        try{
            var metatables = await D6Service.GetMetaTables();  
            metatablesQueryable = metatables!.Value.AsQueryable();  
        }
        catch(Exception ex)
        {
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }

    private void RollDices(int numberOfDice)
    {
        if (numberOfDice == 1)
        {
            dicesResult = DiceResult.Roll1Dice();
        }
        else
        {
            dicesResult = DiceResult.Roll2Dices();
        }
    }

    private async Task TableSelected(int tableId)
    {
        try
        {
            var test = await D6Service.GetMagicScrolls();
        }
        catch (Exception ex)
        {
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }
}



