@using c5m._2d6Dungeon;
@inject D6Service D6Service;

@rendermode InteractiveServer

<h3>Table Viewer</h3>

<FluentStack Orientation="Orientation.Vertical" VerticalGap="5">
    <FluentStack Orientation="Orientation.Horizontal" VerticalGap="10">
        <FluentStack Orientation="Orientation.Horizontal" HorizontalGap="5">
            <FluentButton OnClick="@( () => RollDices(1) )" Appearance="Appearance.Accent">Roll 1D6</FluentButton>
            <FluentButton OnClick="@( () => RollDices(2) )" Appearance="Appearance.Accent">Roll 2D6</FluentButton>
        </FluentStack>
        
        <div style="padding:20px;">
            @if(dicesResult != null)
            {
                <Dices face="@dicesResult.PrimaryDice" size="Dices.DiceSize.regular" color="Dices.DiceColor.red"></Dices>
                <Dices face="@dicesResult.SecondaryDice" size="Dices.DiceSize.regular" color="Dices.DiceColor.purple"></Dices>
            }
        </div>
    </FluentStack>

    <FluentSelect Items=@selectedTable Label="Select Table" /> 

    <FluentGrid Items="@tableData" SelectionMode="FluentGridSelectionMode.Single" SelectedItem="@selectedTable">
        <FluentGridColumn Property="Name" Title="Name" />
        <FluentGridColumn Property="Value" Title="Value" />
    </FluentGrid>
    
</FluentStack>

@code {
    private string? selectedTable;
    private List<string> tables = new List<string> { "Table1", "Table2", "Table3" };
    private List<TableData> tableData = new List<TableData>();

    private DiceResult dicesResult = new DiceResult();

    protected override void OnInitialized()
    {
        LoadTableData();
    }

    private void LoadTableData()
    {
        tableData = new List<TableData>
        {
            new TableData { Name = "Item1", Value = "Value1" },
            new TableData { Name = "Item2", Value = "Value2" }
        };
    }

    private void RollDices(int numberOfDice)
    {
        if (numberOfDice == 1)
        {
            dicesResult = DiceResult.Roll1Dice();
        }
        else
        {
            dicesResult = DiceResult.Roll2Dices();
        }

    }

    private class TableData
    {
        public string? Name { get; set; }
        public string? Value { get; set; }
    }
}



