@using c5m._2d6Dungeon;
@using c5m._2d6Dungeon.web.Domain;
@inject IJSRuntime JSRuntime
@inject D6Service D6Service;
@inject NavigationManager Navigation;

@rendermode InteractiveServer

<FluentLabel Typo="Typography.PageTitle">Adventure Initialization</FluentLabel>

<FluentLabel>To create a new adventure you will need: </FluentLabel>

<FluentStack Orientation="Orientation.Vertical">
    <FluentCard>
        <FluentHeader>Select or Create an Adventurer</FluentHeader>
        @if (selectedAdventurer == null)
        {
            <AdventurerPicker @bind-ParentPlayer="selectedAdventurer"></AdventurerPicker>
        }
        else
        {
            <AdventurerCard @bind-Player="@(selectedAdventurer)"></AdventurerCard>
        }
    </FluentCard>

    <FluentCard>
        <FluentHeader>Create a new Dungeon</FluentHeader>
        <FluentStack Orientation="Orientation.Vertical">
            <p id="message"></p>
            <FluentButton @onclick=RollDices Appearance="Appearance.Accent" disabled="@(!isStartDisable)">@actionLabel
            </FluentButton>
        </FluentStack>
        <div style="padding:20px;">
            @if (dResult != null)
            {
                <Dices face="@dResult.PrimaryDice" size="Dices.DiceSize.regular" color="Dices.DiceColor.red"></Dices>
                <Dices face="@dResult.SecondaryDice" size="Dices.DiceSize.regular" color="Dices.DiceColor.purple"></Dices>
            }
        </div>
        <canvas id="dotCanvas" style="width: 300px; height: 300px;"></canvas>
    </FluentCard>
</FluentStack>


<FluentStack Orientation="Orientation.Horizontal">
    <FluentButton Appearance="Appearance.Accent" @onclick="StarGame" disabled="@isStartDisable">Start</FluentButton>
</FluentStack>

@code {

    [Parameter] public Adventure? ParentAdventure { get; set; }

    [Parameter] public EventCallback<Adventure> ParentAdventureChanged { get; set; }

    private Adventure? betaAdventure;
    public Game.Adventurer? selectedAdventurer;
    private bool isStartDisable = true;
    //private bool firstRender = true;
    private DiceResult? dResult = null;
    private string actionLabel = "Roll 2D6 to determine the Entrance of the dungeon";
    private MappedRoom? entryRoom;

    private async Task StarGame()
    {
        betaAdventure = new Adventure();
        betaAdventure.Adventurer = selectedAdventurer!;

        // TODO: Improve reposition bottom center
        entryRoom!.CoordX = 14;
        entryRoom.CoordY = 20;

        entryRoom.YouAreHere = true;

        betaAdventure.Dungeon.AddRoom(entryRoom);

        betaAdventure = await D6Service.AdventureSave(betaAdventure);
        Navigation.NavigateTo($"play/{betaAdventure.Id}");
    }

    protected override async Task OnAfterRenderAsync(bool firstRender)
    {
        if (firstRender)
        {
            await JSRuntime.InvokeVoidAsync("onResize");
        }
    }


    private async Task RollDices()
    {
        await MapTools.RefreshCanvas(JSRuntime);
        dResult = DiceResult.Roll2Dices();

        entryRoom = Dungeon.StartDungeonLevel(ref dResult);
        entryRoom.IsLobby = true;
        entryRoom.YouAreHere = true;

        //TODO: hardcoded temporary
        entryRoom.CoordX = 1;
        entryRoom.CoordY = 2;

        GameTurn.SetDungeonEntranceDoor(entryRoom, Direction.South, -1);
        GameTurn.AssignExits(entryRoom, Direction.South);
        await MapTools.DrawRoom(JSRuntime, entryRoom);

        actionLabel = "Press the Start button to begin your adventure";
        isStartDisable = false;
    }

    private async Task RenderCanvas()
    {
        await JSRuntime.InvokeVoidAsync("onResize");
    }
}
