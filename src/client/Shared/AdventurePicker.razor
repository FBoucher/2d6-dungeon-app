@using c5m._2d6Dungeon;
@using System.Text.Json;
@inject ID6Service D6Service;

<FluentLabel Typo="Typography.H3">Select the Adventure you would like to continue.</FluentLabel>
@if (AdventurePreviews == null)
{
    <FluentProgressRing>Loading...</FluentProgressRing>
}
else
{
    <FluentDataGrid Items="@AdventurePreviews" ResizableColumns=true>
        <TemplateColumn Title="">
            <FluentButton @OnClick="() => SelectAdventure(a.id))" IconStart="@(new Icons.Filled.Size20.ArrowCircleRight())">Select</FluentButton>
        </TemplateColumn>
        <PropertyColumn Property="@(a => a.adventurer_name)" Title="Adventurer Name" Sortable="true"/>
        <PropertyColumn Property="@(a => a.level)" Title="Level" Sortable="true"/>
        <PropertyColumn Property="@(a => a.last_saved_datetime)" Title="Saved Date" Sortable="true"/>
    </FluentDataGrid>

    <FluentButton Appearance="Appearance.Accent" IconStart="@(new Icons.Filled.Size20.Add())" @onclick=CreateNewAdventure>New</FluentButton>
}

@code {

    private IQueryable<AdventurePreview>? AdventurePreviews;

    [Parameter] public Adventure? ParentAdventure {get; set;}

    [Parameter] public EventCallback<Adventure> ParentAdventureChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try{
            var result  = await D6Service.GetAdventurePreviews();    
            if(result != null)
                AdventurePreviews = result.value.AsQueryable();
        }
        catch(Exception ex){
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }

    
    private void CreateNewAdventure(MouseEventArgs e)
    {
        throw new NotImplementedException();
    }
    private async Task SelectAdventure(int adventureId)
    {
        try{
            ParentAdventure = await D6Service.GetAdventure(adventureId);
            await ParentAdventureChanged.InvokeAsync(ParentAdventure);
        }
        catch(Exception ex){
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }
}
