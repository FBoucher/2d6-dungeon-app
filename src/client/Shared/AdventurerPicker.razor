@using c5m._2d6Dungeon;
@using Microsoft.AspNetCore.Components.QuickGrid;
@using System.Text.Json;
@inject ID6Service D6Service;
@inject NavigationManager Navigation;

<h3>Select a Adventurer</h3>
@if (adventurers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <div class="grid">
        <QuickGrid Items="@adventurersQueryable" class="table table-hover table-striped">
            <Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn Title="">
                <button @onclick="@(() => SelectPlayer(context.id))" class="btn btn-outline-secondary btn-sm" >Select</button>
            </Microsoft.AspNetCore.Components.QuickGrid.TemplateColumn>
            <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="@(c => c.name)" Sortable="true" />
            <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="@(c => c.xp.ToString())" />
            <Microsoft.AspNetCore.Components.QuickGrid.PropertyColumn Property="@(c => c.level.ToString())" Sortable="true" />
        </QuickGrid>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="button" class="btn btn-outline-primary" @onclick=CreateNewAdventurer>New</button>
        </div>
    </div>
}

@code {

    private AdventurerPreviewList? adventurers;
    IQueryable<AdventurerPreview>? adventurersQueryable;

    [Parameter] public Game.Adventurer? ParentPlayer {get; set;}

    [Parameter] public EventCallback<Game.Adventurer> ParentPlayerChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try{
            adventurers = await D6Service.GetAdventurerPreviews();  
            adventurersQueryable = adventurers.value.AsQueryable();  
        }
        catch(Exception ex){
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }

    
    private void CreateNewAdventurer(MouseEventArgs e)
    {
        Navigation.NavigateTo("adventurer/new");
    }
    private async Task SelectPlayer(int playerId)
    {
        try{
            ParentPlayer = await D6Service.GetAdventurer(playerId);
            await ParentPlayerChanged.InvokeAsync(ParentPlayer);
        }
        catch(Exception ex){
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }
}
