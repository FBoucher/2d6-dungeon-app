@page "/fetchdata"
@inject D6Service D6Service;
@using System.Text.Json
@rendermode InteractiveServer

<PageTitle>Database test</PageTitle>

<FluentLabel Typo="Typography.PageTitle">Test Fetching</FluentLabel>
<FluentButton Appearance="Appearance.Accent" OnClick="GetWeapons">Get Weapons</FluentButton> 

@if (weapons == null)
{
    <p>No weapons loaded yet...</p>
}
else
{       
    
    <InputSelect Value="selectedWeaponId" 
                    ValueExpression = "@( () => selectedWeaponId)"
                    ValueChanged = "@( (int weaponId) => ValueChanged(weaponId))"
                    class="form-control" 
                    id ="selectedWeapon">
        @if (selectedWeaponId == 0)
        {
            <option value="0" selected> - Select a Weapon - </option>
        }
        @foreach (var w in weapons.value!)
        {
            <option value="@w.Id"> @w.Name </option>
        }
    </InputSelect>

    @if (manoeuvres == null)
    {
        <FluentProgressRing>No manoeuvres yet...</FluentProgressRing>
    }
    else
    {
        <FluentDataGrid Items="@manoeuvresQueryable" ResizableColumns="true">
            <PropertyColumn Title="Weapon" Property="@(m => weaponName)" Sortable="true"/>
            <PropertyColumn Title="Description" Property="@(m => m.Description)" Sortable="true"/>
            <PropertyColumn Title="Modifier" Property="@(m => m.Modifier)" Sortable="true"/>
            <PropertyColumn Title="DiceSet" Property="@(m => m.DiceSet)" Sortable="true"/>
        </FluentDataGrid>
    }
}


@code {
    private string weaponName = "a weapon...";
    private WeaponList? weapons;
    private WeaponManoeuvreList? manoeuvres;
    private int selectedWeaponId = 1;

    IQueryable<WeaponManoeuvre>? manoeuvresQueryable;


    private async Task GetWeapons()
    {
        try{
            weapons = await D6Service.GetWeapons();
        }
        catch(Exception ex){
            Console.WriteLine("Oops2 --> " + ex.Message);
        }
    }

    private async Task ValueChanged(int weaponId)
    {
        try{
            selectedWeaponId = weaponId;
            if(selectedWeaponId > 0){
                weaponName = weapons?.value?.Where(w => w.Id == selectedWeaponId).Select(w => w.Name).FirstOrDefault() ?? "Unknown weapon";
                manoeuvres = await D6Service.GetWeaponManoeuvreList(selectedWeaponId, 1);
                manoeuvresQueryable = manoeuvres!.value.AsQueryable();
            }
        }
        catch(Exception ex){
            Console.WriteLine("Oops3 --> " + ex.Message);
        }
    }
}