@using c5m._2d6Dungeon;
@using System.Text.Json;
@inject ID6Service D6Service;

<h3>Select a Adventurer</h3>
@if (adventurers == null)
{
    <p><em>Loading...</em></p>
}
else
{
    <table class="table table-hover table-striped">
        <thead>
            <tr>
                <!--th> </th-->
                <th>Name</th>
                <th>XP</th>
                <th>Level</th>
            </tr>
        </thead>
        <tbody>
            @foreach (var c in adventurers.value)
            {
                <tr style="cursor:pointer" @onclick="() => SelectPlayer(c.id)">
                    <!--button type="button" class="btn btn-outline-primary btn-sm" >Select</button-->
                    <td>@c.name</td>
                    <td>@c.xp.ToString()</td>
                    <td>@c.level.ToString()</td>
                </tr>
            }
        </tbody>
    </table>
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="button" disabled="true" class="btn btn-outline-primary" @onclick=CreateNewAdventurer>New</button>
        </div>
    </div>
}

@code {

    private AdventurerPreviewList? adventurers;

    [Parameter] public Adventurer? ParentPlayer {get; set;}

    [Parameter] public EventCallback<Adventurer> ParentPlayerChanged { get; set; }

    protected override async Task OnInitializedAsync()
    {
        try{
            adventurers = await D6Service.GetAdventurerPreviews();    
        }
        catch(Exception ex){
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }

    
    private void CreateNewAdventurer(MouseEventArgs e)
    {
        throw new NotImplementedException();
    }
    private async Task SelectPlayer(int playerId)
    {
        try{
            ParentPlayer = await D6Service.GetAdventurer(playerId);
            await ParentPlayerChanged.InvokeAsync(ParentPlayer);
        }
        catch(Exception ex){
            Console.WriteLine("Oops! --> " + ex.Message);
        }
    }
}
